// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: proto/streaming/v1alpha1/music_album.proto

package streaming

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateAlbumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Year        uint32   `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CoverId     uint64   `protobuf:"varint,4,opt,name=cover_id,json=coverId,proto3" json:"cover_id,omitempty"`
	ArtistIds   []string `protobuf:"bytes,5,rep,name=artist_ids,json=artistIds,proto3" json:"artist_ids,omitempty"`
}

func (x *CreateAlbumRequest) Reset() {
	*x = CreateAlbumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlbumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlbumRequest) ProtoMessage() {}

func (x *CreateAlbumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlbumRequest.ProtoReflect.Descriptor instead.
func (*CreateAlbumRequest) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_album_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAlbumRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateAlbumRequest) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *CreateAlbumRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateAlbumRequest) GetCoverId() uint64 {
	if x != nil {
		return x.CoverId
	}
	return 0
}

func (x *CreateAlbumRequest) GetArtistIds() []string {
	if x != nil {
		return x.ArtistIds
	}
	return nil
}

type CreateAlbumResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string          `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Album   *MusicAlbumData `protobuf:"bytes,2,opt,name=album,proto3" json:"album,omitempty"`
}

func (x *CreateAlbumResponse) Reset() {
	*x = CreateAlbumResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlbumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlbumResponse) ProtoMessage() {}

func (x *CreateAlbumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlbumResponse.ProtoReflect.Descriptor instead.
func (*CreateAlbumResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_album_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAlbumResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateAlbumResponse) GetAlbum() *MusicAlbumData {
	if x != nil {
		return x.Album
	}
	return nil
}

type GetAlbumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAlbumRequest) Reset() {
	*x = GetAlbumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlbumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlbumRequest) ProtoMessage() {}

func (x *GetAlbumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlbumRequest.ProtoReflect.Descriptor instead.
func (*GetAlbumRequest) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_album_proto_rawDescGZIP(), []int{2}
}

func (x *GetAlbumRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAlbumResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string          `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Album   *MusicAlbumData `protobuf:"bytes,2,opt,name=album,proto3" json:"album,omitempty"`
}

func (x *GetAlbumResponse) Reset() {
	*x = GetAlbumResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlbumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlbumResponse) ProtoMessage() {}

func (x *GetAlbumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlbumResponse.ProtoReflect.Descriptor instead.
func (*GetAlbumResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_album_proto_rawDescGZIP(), []int{3}
}

func (x *GetAlbumResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAlbumResponse) GetAlbum() *MusicAlbumData {
	if x != nil {
		return x.Album
	}
	return nil
}

type EditAlbumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Year        uint32   `protobuf:"varint,3,opt,name=year,proto3" json:"year,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	CoverId     uint64   `protobuf:"varint,5,opt,name=cover_id,json=coverId,proto3" json:"cover_id,omitempty"`
	ArtistIds   []string `protobuf:"bytes,6,rep,name=artist_ids,json=artistIds,proto3" json:"artist_ids,omitempty"`
}

func (x *EditAlbumRequest) Reset() {
	*x = EditAlbumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditAlbumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditAlbumRequest) ProtoMessage() {}

func (x *EditAlbumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditAlbumRequest.ProtoReflect.Descriptor instead.
func (*EditAlbumRequest) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_album_proto_rawDescGZIP(), []int{4}
}

func (x *EditAlbumRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EditAlbumRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EditAlbumRequest) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *EditAlbumRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EditAlbumRequest) GetCoverId() uint64 {
	if x != nil {
		return x.CoverId
	}
	return 0
}

func (x *EditAlbumRequest) GetArtistIds() []string {
	if x != nil {
		return x.ArtistIds
	}
	return nil
}

type EditAlbumResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string          `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Album   *MusicAlbumData `protobuf:"bytes,2,opt,name=album,proto3" json:"album,omitempty"`
}

func (x *EditAlbumResponse) Reset() {
	*x = EditAlbumResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditAlbumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditAlbumResponse) ProtoMessage() {}

func (x *EditAlbumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditAlbumResponse.ProtoReflect.Descriptor instead.
func (*EditAlbumResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_album_proto_rawDescGZIP(), []int{5}
}

func (x *EditAlbumResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EditAlbumResponse) GetAlbum() *MusicAlbumData {
	if x != nil {
		return x.Album
	}
	return nil
}

type GetAlbumsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string            `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Albums  []*MusicAlbumData `protobuf:"bytes,2,rep,name=albums,proto3" json:"albums,omitempty"`
}

func (x *GetAlbumsResponse) Reset() {
	*x = GetAlbumsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlbumsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlbumsResponse) ProtoMessage() {}

func (x *GetAlbumsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlbumsResponse.ProtoReflect.Descriptor instead.
func (*GetAlbumsResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_album_proto_rawDescGZIP(), []int{6}
}

func (x *GetAlbumsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAlbumsResponse) GetAlbums() []*MusicAlbumData {
	if x != nil {
		return x.Albums
	}
	return nil
}

type AddAlbumArtistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ArtistIds []uint64 `protobuf:"varint,2,rep,packed,name=artist_ids,json=artistIds,proto3" json:"artist_ids,omitempty"`
}

func (x *AddAlbumArtistRequest) Reset() {
	*x = AddAlbumArtistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAlbumArtistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAlbumArtistRequest) ProtoMessage() {}

func (x *AddAlbumArtistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAlbumArtistRequest.ProtoReflect.Descriptor instead.
func (*AddAlbumArtistRequest) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_album_proto_rawDescGZIP(), []int{7}
}

func (x *AddAlbumArtistRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddAlbumArtistRequest) GetArtistIds() []uint64 {
	if x != nil {
		return x.ArtistIds
	}
	return nil
}

type AddAlbumArtistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string             `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Artists []*MusicArtistData `protobuf:"bytes,2,rep,name=artists,proto3" json:"artists,omitempty"`
}

func (x *AddAlbumArtistResponse) Reset() {
	*x = AddAlbumArtistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAlbumArtistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAlbumArtistResponse) ProtoMessage() {}

func (x *AddAlbumArtistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAlbumArtistResponse.ProtoReflect.Descriptor instead.
func (*AddAlbumArtistResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_album_proto_rawDescGZIP(), []int{8}
}

func (x *AddAlbumArtistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddAlbumArtistResponse) GetArtists() []*MusicArtistData {
	if x != nil {
		return x.Artists
	}
	return nil
}

type RemoveAlbumArtistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ArtistIds []uint64 `protobuf:"varint,2,rep,packed,name=artist_ids,json=artistIds,proto3" json:"artist_ids,omitempty"`
}

func (x *RemoveAlbumArtistRequest) Reset() {
	*x = RemoveAlbumArtistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAlbumArtistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAlbumArtistRequest) ProtoMessage() {}

func (x *RemoveAlbumArtistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAlbumArtistRequest.ProtoReflect.Descriptor instead.
func (*RemoveAlbumArtistRequest) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_album_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveAlbumArtistRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RemoveAlbumArtistRequest) GetArtistIds() []uint64 {
	if x != nil {
		return x.ArtistIds
	}
	return nil
}

type RemoveAlbumArtistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string             `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Artists []*MusicArtistData `protobuf:"bytes,2,rep,name=artists,proto3" json:"artists,omitempty"`
}

func (x *RemoveAlbumArtistResponse) Reset() {
	*x = RemoveAlbumArtistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAlbumArtistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAlbumArtistResponse) ProtoMessage() {}

func (x *RemoveAlbumArtistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_album_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAlbumArtistResponse.ProtoReflect.Descriptor instead.
func (*RemoveAlbumArtistResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_album_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveAlbumArtistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RemoveAlbumArtistResponse) GetArtists() []*MusicArtistData {
	if x != nil {
		return x.Artists
	}
	return nil
}

var File_proto_streaming_v1alpha1_music_album_proto protoreflect.FileDescriptor

var file_proto_streaming_v1alpha1_music_album_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x5f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x49, 0x64, 0x73, 0x22, 0x6f, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4d, 0x75, 0x73, 0x69, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05,
	0x61, 0x6c, 0x62, 0x75, 0x6d, 0x22, 0x26, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6c, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x22, 0xad, 0x01, 0x0a, 0x10,
	0x45, 0x64, 0x69, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x79,
	0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x64, 0x73, 0x22, 0x6d, 0x0a, 0x11, 0x45,
	0x64, 0x69, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x22, 0x6f, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x61, 0x6c, 0x62,
	0x75, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x22, 0x4b, 0x0a, 0x15, 0x41,
	0x64, 0x64, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09, 0x61,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x64, 0x73, 0x22, 0x77, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x07,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x41, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x73, 0x22, 0x4e, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x64,
	0x73, 0x22, 0x7a, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x32, 0xa6, 0x07,
	0x0a, 0x11, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x12, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x5f, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x73, 0x2f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x8c, 0x01, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x6c, 0x62,
	0x75, 0x6d, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x92, 0x01, 0x0a, 0x09, 0x45, 0x64, 0x69,
	0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x64,
	0x69, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a, 0x01, 0x2a, 0x1a, 0x21, 0x2f, 0x5f, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x73, 0x2f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xa9, 0x01,
	0x0a, 0x0e, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x12, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a, 0x22, 0x29,
	0x2f, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x12, 0xb2, 0x01, 0x0a, 0x11, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12,
	0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e,
	0x3a, 0x01, 0x2a, 0x2a, 0x29, 0x2f, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x6c, 0x62, 0x75, 0x6d,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x12, 0x76,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x73, 0x2f,
	0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x42, 0x14, 0x5a, 0x12, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_streaming_v1alpha1_music_album_proto_rawDescOnce sync.Once
	file_proto_streaming_v1alpha1_music_album_proto_rawDescData = file_proto_streaming_v1alpha1_music_album_proto_rawDesc
)

func file_proto_streaming_v1alpha1_music_album_proto_rawDescGZIP() []byte {
	file_proto_streaming_v1alpha1_music_album_proto_rawDescOnce.Do(func() {
		file_proto_streaming_v1alpha1_music_album_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_streaming_v1alpha1_music_album_proto_rawDescData)
	})
	return file_proto_streaming_v1alpha1_music_album_proto_rawDescData
}

var file_proto_streaming_v1alpha1_music_album_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_streaming_v1alpha1_music_album_proto_goTypes = []interface{}{
	(*CreateAlbumRequest)(nil),        // 0: proto.streaming.v1alpha1.CreateAlbumRequest
	(*CreateAlbumResponse)(nil),       // 1: proto.streaming.v1alpha1.CreateAlbumResponse
	(*GetAlbumRequest)(nil),           // 2: proto.streaming.v1alpha1.GetAlbumRequest
	(*GetAlbumResponse)(nil),          // 3: proto.streaming.v1alpha1.GetAlbumResponse
	(*EditAlbumRequest)(nil),          // 4: proto.streaming.v1alpha1.EditAlbumRequest
	(*EditAlbumResponse)(nil),         // 5: proto.streaming.v1alpha1.EditAlbumResponse
	(*GetAlbumsResponse)(nil),         // 6: proto.streaming.v1alpha1.GetAlbumsResponse
	(*AddAlbumArtistRequest)(nil),     // 7: proto.streaming.v1alpha1.AddAlbumArtistRequest
	(*AddAlbumArtistResponse)(nil),    // 8: proto.streaming.v1alpha1.AddAlbumArtistResponse
	(*RemoveAlbumArtistRequest)(nil),  // 9: proto.streaming.v1alpha1.RemoveAlbumArtistRequest
	(*RemoveAlbumArtistResponse)(nil), // 10: proto.streaming.v1alpha1.RemoveAlbumArtistResponse
	(*MusicAlbumData)(nil),            // 11: proto.streaming.v1alpha1.MusicAlbumData
	(*MusicArtistData)(nil),           // 12: proto.streaming.v1alpha1.MusicArtistData
	(*emptypb.Empty)(nil),             // 13: google.protobuf.Empty
}
var file_proto_streaming_v1alpha1_music_album_proto_depIdxs = []int32{
	11, // 0: proto.streaming.v1alpha1.CreateAlbumResponse.album:type_name -> proto.streaming.v1alpha1.MusicAlbumData
	11, // 1: proto.streaming.v1alpha1.GetAlbumResponse.album:type_name -> proto.streaming.v1alpha1.MusicAlbumData
	11, // 2: proto.streaming.v1alpha1.EditAlbumResponse.album:type_name -> proto.streaming.v1alpha1.MusicAlbumData
	11, // 3: proto.streaming.v1alpha1.GetAlbumsResponse.albums:type_name -> proto.streaming.v1alpha1.MusicAlbumData
	12, // 4: proto.streaming.v1alpha1.AddAlbumArtistResponse.artists:type_name -> proto.streaming.v1alpha1.MusicArtistData
	12, // 5: proto.streaming.v1alpha1.RemoveAlbumArtistResponse.artists:type_name -> proto.streaming.v1alpha1.MusicArtistData
	0,  // 6: proto.streaming.v1alpha1.MusicAlbumService.CreateAlbum:input_type -> proto.streaming.v1alpha1.CreateAlbumRequest
	2,  // 7: proto.streaming.v1alpha1.MusicAlbumService.GetAlbum:input_type -> proto.streaming.v1alpha1.GetAlbumRequest
	4,  // 8: proto.streaming.v1alpha1.MusicAlbumService.EditAlbum:input_type -> proto.streaming.v1alpha1.EditAlbumRequest
	7,  // 9: proto.streaming.v1alpha1.MusicAlbumService.AddAlbumArtist:input_type -> proto.streaming.v1alpha1.AddAlbumArtistRequest
	9,  // 10: proto.streaming.v1alpha1.MusicAlbumService.RemoveAlbumArtist:input_type -> proto.streaming.v1alpha1.RemoveAlbumArtistRequest
	13, // 11: proto.streaming.v1alpha1.MusicAlbumService.GetAlbums:input_type -> google.protobuf.Empty
	1,  // 12: proto.streaming.v1alpha1.MusicAlbumService.CreateAlbum:output_type -> proto.streaming.v1alpha1.CreateAlbumResponse
	3,  // 13: proto.streaming.v1alpha1.MusicAlbumService.GetAlbum:output_type -> proto.streaming.v1alpha1.GetAlbumResponse
	5,  // 14: proto.streaming.v1alpha1.MusicAlbumService.EditAlbum:output_type -> proto.streaming.v1alpha1.EditAlbumResponse
	8,  // 15: proto.streaming.v1alpha1.MusicAlbumService.AddAlbumArtist:output_type -> proto.streaming.v1alpha1.AddAlbumArtistResponse
	10, // 16: proto.streaming.v1alpha1.MusicAlbumService.RemoveAlbumArtist:output_type -> proto.streaming.v1alpha1.RemoveAlbumArtistResponse
	6,  // 17: proto.streaming.v1alpha1.MusicAlbumService.GetAlbums:output_type -> proto.streaming.v1alpha1.GetAlbumsResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_streaming_v1alpha1_music_album_proto_init() }
func file_proto_streaming_v1alpha1_music_album_proto_init() {
	if File_proto_streaming_v1alpha1_music_album_proto != nil {
		return
	}
	file_proto_streaming_v1alpha1_data_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_streaming_v1alpha1_music_album_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlbumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_album_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlbumResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_album_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlbumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_album_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlbumResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_album_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditAlbumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_album_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditAlbumResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_album_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlbumsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_album_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAlbumArtistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_album_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAlbumArtistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_album_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAlbumArtistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_album_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAlbumArtistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_streaming_v1alpha1_music_album_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_streaming_v1alpha1_music_album_proto_goTypes,
		DependencyIndexes: file_proto_streaming_v1alpha1_music_album_proto_depIdxs,
		MessageInfos:      file_proto_streaming_v1alpha1_music_album_proto_msgTypes,
	}.Build()
	File_proto_streaming_v1alpha1_music_album_proto = out.File
	file_proto_streaming_v1alpha1_music_album_proto_rawDesc = nil
	file_proto_streaming_v1alpha1_music_album_proto_goTypes = nil
	file_proto_streaming_v1alpha1_music_album_proto_depIdxs = nil
}
