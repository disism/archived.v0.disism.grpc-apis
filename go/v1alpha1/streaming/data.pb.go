// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: proto/streaming/v1alpha1/data.proto

package streaming

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MusicData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Name        string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Duration    float64                `protobuf:"fixed64,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Description string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	File        *FileData              `protobuf:"bytes,7,opt,name=file,proto3" json:"file,omitempty"`
	Albums      *MusicAlbumData        `protobuf:"bytes,8,opt,name=albums,proto3" json:"albums,omitempty"`
	Artists     []*MusicArtistData     `protobuf:"bytes,9,rep,name=artists,proto3" json:"artists,omitempty"`
	Genres      []*MusicGenreData      `protobuf:"bytes,10,rep,name=genres,proto3" json:"genres,omitempty"`
}

func (x *MusicData) Reset() {
	*x = MusicData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicData) ProtoMessage() {}

func (x *MusicData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicData.ProtoReflect.Descriptor instead.
func (*MusicData) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_data_proto_rawDescGZIP(), []int{0}
}

func (x *MusicData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MusicData) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *MusicData) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *MusicData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MusicData) GetDuration() float64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *MusicData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MusicData) GetFile() *FileData {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *MusicData) GetAlbums() *MusicAlbumData {
	if x != nil {
		return x.Albums
	}
	return nil
}

func (x *MusicData) GetArtists() []*MusicArtistData {
	if x != nil {
		return x.Artists
	}
	return nil
}

func (x *MusicData) GetGenres() []*MusicGenreData {
	if x != nil {
		return x.Genres
	}
	return nil
}

type MusicAlbumData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Title       string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Year        uint32                 `protobuf:"varint,5,opt,name=year,proto3" json:"year,omitempty"`
	Description string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Cover       *CoverData             `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover,omitempty"`
	Artists     []*MusicArtistData     `protobuf:"bytes,8,rep,name=artists,proto3" json:"artists,omitempty"`
}

func (x *MusicAlbumData) Reset() {
	*x = MusicAlbumData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicAlbumData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicAlbumData) ProtoMessage() {}

func (x *MusicAlbumData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicAlbumData.ProtoReflect.Descriptor instead.
func (*MusicAlbumData) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_data_proto_rawDescGZIP(), []int{1}
}

func (x *MusicAlbumData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MusicAlbumData) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *MusicAlbumData) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *MusicAlbumData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MusicAlbumData) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *MusicAlbumData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MusicAlbumData) GetCover() *CoverData {
	if x != nil {
		return x.Cover
	}
	return nil
}

func (x *MusicAlbumData) GetArtists() []*MusicArtistData {
	if x != nil {
		return x.Artists
	}
	return nil
}

type MusicArtistData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MusicArtistData) Reset() {
	*x = MusicArtistData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicArtistData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicArtistData) ProtoMessage() {}

func (x *MusicArtistData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicArtistData.ProtoReflect.Descriptor instead.
func (*MusicArtistData) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_data_proto_rawDescGZIP(), []int{2}
}

func (x *MusicArtistData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MusicArtistData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MusicGenreData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MusicGenreData) Reset() {
	*x = MusicGenreData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicGenreData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicGenreData) ProtoMessage() {}

func (x *MusicGenreData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicGenreData.ProtoReflect.Descriptor instead.
func (*MusicGenreData) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_data_proto_rawDescGZIP(), []int{3}
}

func (x *MusicGenreData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MusicGenreData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FileData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Cid  string `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Size uint64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FileData) Reset() {
	*x = FileData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileData) ProtoMessage() {}

func (x *FileData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileData.ProtoReflect.Descriptor instead.
func (*FileData) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_data_proto_rawDescGZIP(), []int{4}
}

func (x *FileData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileData) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *FileData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileData) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CoverData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	File       *FileData              `protobuf:"bytes,4,opt,name=file,proto3" json:"file,omitempty"`
	Width      int32                  `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	Height     int32                  `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *CoverData) Reset() {
	*x = CoverData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoverData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoverData) ProtoMessage() {}

func (x *CoverData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoverData.ProtoReflect.Descriptor instead.
func (*CoverData) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_data_proto_rawDescGZIP(), []int{5}
}

func (x *CoverData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CoverData) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *CoverData) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *CoverData) GetFile() *FileData {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *CoverData) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *CoverData) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type MusicPlaylistData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Name        string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Cover       *CoverData             `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	Private     bool                   `protobuf:"varint,7,opt,name=private,proto3" json:"private,omitempty"`
}

func (x *MusicPlaylistData) Reset() {
	*x = MusicPlaylistData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_data_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicPlaylistData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicPlaylistData) ProtoMessage() {}

func (x *MusicPlaylistData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_data_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicPlaylistData.ProtoReflect.Descriptor instead.
func (*MusicPlaylistData) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_data_proto_rawDescGZIP(), []int{6}
}

func (x *MusicPlaylistData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MusicPlaylistData) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *MusicPlaylistData) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *MusicPlaylistData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MusicPlaylistData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MusicPlaylistData) GetCover() *CoverData {
	if x != nil {
		return x.Cover
	}
	return nil
}

func (x *MusicPlaylistData) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

var File_proto_streaming_v1alpha1_data_proto protoreflect.FileDescriptor

var file_proto_streaming_v1alpha1_data_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xe8, 0x03, 0x0a, 0x09, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x75,
	0x73, 0x69, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x73, 0x12, 0x43, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x12, 0x40, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x72, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x22, 0xe6, 0x02, 0x0a, 0x0e,
	0x4d, 0x75, 0x73, 0x69, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x79, 0x65,
	0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x6f, 0x76, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12,
	0x43, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x75, 0x73, 0x69,
	0x63, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x61, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x73, 0x22, 0x35, 0x0a, 0x0f, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x41, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x0e, 0x4d,
	0x75, 0x73, 0x69, 0x63, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x54, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xfb, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x36, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xa8, 0x02, 0x0a, 0x11, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x42, 0x14, 0x5a, 0x12, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_streaming_v1alpha1_data_proto_rawDescOnce sync.Once
	file_proto_streaming_v1alpha1_data_proto_rawDescData = file_proto_streaming_v1alpha1_data_proto_rawDesc
)

func file_proto_streaming_v1alpha1_data_proto_rawDescGZIP() []byte {
	file_proto_streaming_v1alpha1_data_proto_rawDescOnce.Do(func() {
		file_proto_streaming_v1alpha1_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_streaming_v1alpha1_data_proto_rawDescData)
	})
	return file_proto_streaming_v1alpha1_data_proto_rawDescData
}

var file_proto_streaming_v1alpha1_data_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_streaming_v1alpha1_data_proto_goTypes = []interface{}{
	(*MusicData)(nil),             // 0: proto.streaming.v1alpha1.MusicData
	(*MusicAlbumData)(nil),        // 1: proto.streaming.v1alpha1.MusicAlbumData
	(*MusicArtistData)(nil),       // 2: proto.streaming.v1alpha1.MusicArtistData
	(*MusicGenreData)(nil),        // 3: proto.streaming.v1alpha1.MusicGenreData
	(*FileData)(nil),              // 4: proto.streaming.v1alpha1.FileData
	(*CoverData)(nil),             // 5: proto.streaming.v1alpha1.CoverData
	(*MusicPlaylistData)(nil),     // 6: proto.streaming.v1alpha1.MusicPlaylistData
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_proto_streaming_v1alpha1_data_proto_depIdxs = []int32{
	7,  // 0: proto.streaming.v1alpha1.MusicData.create_time:type_name -> google.protobuf.Timestamp
	7,  // 1: proto.streaming.v1alpha1.MusicData.update_time:type_name -> google.protobuf.Timestamp
	4,  // 2: proto.streaming.v1alpha1.MusicData.file:type_name -> proto.streaming.v1alpha1.FileData
	1,  // 3: proto.streaming.v1alpha1.MusicData.albums:type_name -> proto.streaming.v1alpha1.MusicAlbumData
	2,  // 4: proto.streaming.v1alpha1.MusicData.artists:type_name -> proto.streaming.v1alpha1.MusicArtistData
	3,  // 5: proto.streaming.v1alpha1.MusicData.genres:type_name -> proto.streaming.v1alpha1.MusicGenreData
	7,  // 6: proto.streaming.v1alpha1.MusicAlbumData.create_time:type_name -> google.protobuf.Timestamp
	7,  // 7: proto.streaming.v1alpha1.MusicAlbumData.update_time:type_name -> google.protobuf.Timestamp
	5,  // 8: proto.streaming.v1alpha1.MusicAlbumData.cover:type_name -> proto.streaming.v1alpha1.CoverData
	2,  // 9: proto.streaming.v1alpha1.MusicAlbumData.artists:type_name -> proto.streaming.v1alpha1.MusicArtistData
	7,  // 10: proto.streaming.v1alpha1.CoverData.create_time:type_name -> google.protobuf.Timestamp
	7,  // 11: proto.streaming.v1alpha1.CoverData.update_time:type_name -> google.protobuf.Timestamp
	4,  // 12: proto.streaming.v1alpha1.CoverData.file:type_name -> proto.streaming.v1alpha1.FileData
	7,  // 13: proto.streaming.v1alpha1.MusicPlaylistData.create_time:type_name -> google.protobuf.Timestamp
	7,  // 14: proto.streaming.v1alpha1.MusicPlaylistData.update_time:type_name -> google.protobuf.Timestamp
	5,  // 15: proto.streaming.v1alpha1.MusicPlaylistData.cover:type_name -> proto.streaming.v1alpha1.CoverData
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_proto_streaming_v1alpha1_data_proto_init() }
func file_proto_streaming_v1alpha1_data_proto_init() {
	if File_proto_streaming_v1alpha1_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_streaming_v1alpha1_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicAlbumData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicArtistData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicGenreData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_data_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoverData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_data_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicPlaylistData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_streaming_v1alpha1_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_streaming_v1alpha1_data_proto_goTypes,
		DependencyIndexes: file_proto_streaming_v1alpha1_data_proto_depIdxs,
		MessageInfos:      file_proto_streaming_v1alpha1_data_proto_msgTypes,
	}.Build()
	File_proto_streaming_v1alpha1_data_proto = out.File
	file_proto_streaming_v1alpha1_data_proto_rawDesc = nil
	file_proto_streaming_v1alpha1_data_proto_goTypes = nil
	file_proto_streaming_v1alpha1_data_proto_depIdxs = nil
}
