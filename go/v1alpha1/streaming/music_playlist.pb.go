// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: proto/streaming/v1alpha1/music_playlist.proto

package streaming

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreatePlaylistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CoverId     uint64 `protobuf:"varint,3,opt,name=cover_id,json=coverId,proto3" json:"cover_id,omitempty"`
	Private     bool   `protobuf:"varint,4,opt,name=private,proto3" json:"private,omitempty"`
}

func (x *CreatePlaylistRequest) Reset() {
	*x = CreatePlaylistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlaylistRequest) ProtoMessage() {}

func (x *CreatePlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlaylistRequest.ProtoReflect.Descriptor instead.
func (*CreatePlaylistRequest) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_playlist_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePlaylistRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePlaylistRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreatePlaylistRequest) GetCoverId() uint64 {
	if x != nil {
		return x.CoverId
	}
	return 0
}

func (x *CreatePlaylistRequest) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

type CreatePlaylistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string             `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Playlist *MusicPlaylistData `protobuf:"bytes,2,opt,name=playlist,proto3" json:"playlist,omitempty"`
}

func (x *CreatePlaylistResponse) Reset() {
	*x = CreatePlaylistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlaylistResponse) ProtoMessage() {}

func (x *CreatePlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlaylistResponse.ProtoReflect.Descriptor instead.
func (*CreatePlaylistResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_playlist_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePlaylistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreatePlaylistResponse) GetPlaylist() *MusicPlaylistData {
	if x != nil {
		return x.Playlist
	}
	return nil
}

type GetPlaylistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message   string               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Playlists []*MusicPlaylistData `protobuf:"bytes,2,rep,name=playlists,proto3" json:"playlists,omitempty"`
}

func (x *GetPlaylistsResponse) Reset() {
	*x = GetPlaylistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlaylistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaylistsResponse) ProtoMessage() {}

func (x *GetPlaylistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaylistsResponse.ProtoReflect.Descriptor instead.
func (*GetPlaylistsResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_playlist_proto_rawDescGZIP(), []int{2}
}

func (x *GetPlaylistsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPlaylistsResponse) GetPlaylists() []*MusicPlaylistData {
	if x != nil {
		return x.Playlists
	}
	return nil
}

type GetPlaylistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPlaylistRequest) Reset() {
	*x = GetPlaylistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaylistRequest) ProtoMessage() {}

func (x *GetPlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaylistRequest.ProtoReflect.Descriptor instead.
func (*GetPlaylistRequest) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_playlist_proto_rawDescGZIP(), []int{3}
}

func (x *GetPlaylistRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetPlaylistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string             `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Playlist *MusicPlaylistData `protobuf:"bytes,2,opt,name=playlist,proto3" json:"playlist,omitempty"`
	Musics   []*MusicData       `protobuf:"bytes,3,rep,name=musics,proto3" json:"musics,omitempty"`
}

func (x *GetPlaylistResponse) Reset() {
	*x = GetPlaylistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaylistResponse) ProtoMessage() {}

func (x *GetPlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaylistResponse.ProtoReflect.Descriptor instead.
func (*GetPlaylistResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_playlist_proto_rawDescGZIP(), []int{4}
}

func (x *GetPlaylistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPlaylistResponse) GetPlaylist() *MusicPlaylistData {
	if x != nil {
		return x.Playlist
	}
	return nil
}

func (x *GetPlaylistResponse) GetMusics() []*MusicData {
	if x != nil {
		return x.Musics
	}
	return nil
}

type EditPlaylistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CoverId     uint64 `protobuf:"varint,4,opt,name=cover_id,json=coverId,proto3" json:"cover_id,omitempty"`
}

func (x *EditPlaylistRequest) Reset() {
	*x = EditPlaylistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditPlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditPlaylistRequest) ProtoMessage() {}

func (x *EditPlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditPlaylistRequest.ProtoReflect.Descriptor instead.
func (*EditPlaylistRequest) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_playlist_proto_rawDescGZIP(), []int{5}
}

func (x *EditPlaylistRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EditPlaylistRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EditPlaylistRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EditPlaylistRequest) GetCoverId() uint64 {
	if x != nil {
		return x.CoverId
	}
	return 0
}

type EditPlaylistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string             `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Playlist *MusicPlaylistData `protobuf:"bytes,2,opt,name=playlist,proto3" json:"playlist,omitempty"`
}

func (x *EditPlaylistResponse) Reset() {
	*x = EditPlaylistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditPlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditPlaylistResponse) ProtoMessage() {}

func (x *EditPlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditPlaylistResponse.ProtoReflect.Descriptor instead.
func (*EditPlaylistResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_playlist_proto_rawDescGZIP(), []int{6}
}

func (x *EditPlaylistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EditPlaylistResponse) GetPlaylist() *MusicPlaylistData {
	if x != nil {
		return x.Playlist
	}
	return nil
}

type EditPlaylistPrivateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Private bool   `protobuf:"varint,2,opt,name=private,proto3" json:"private,omitempty"`
}

func (x *EditPlaylistPrivateRequest) Reset() {
	*x = EditPlaylistPrivateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditPlaylistPrivateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditPlaylistPrivateRequest) ProtoMessage() {}

func (x *EditPlaylistPrivateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditPlaylistPrivateRequest.ProtoReflect.Descriptor instead.
func (*EditPlaylistPrivateRequest) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_playlist_proto_rawDescGZIP(), []int{7}
}

func (x *EditPlaylistPrivateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EditPlaylistPrivateRequest) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

type EditPlaylistPrivateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status  bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *EditPlaylistPrivateResponse) Reset() {
	*x = EditPlaylistPrivateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditPlaylistPrivateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditPlaylistPrivateResponse) ProtoMessage() {}

func (x *EditPlaylistPrivateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditPlaylistPrivateResponse.ProtoReflect.Descriptor instead.
func (*EditPlaylistPrivateResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_playlist_proto_rawDescGZIP(), []int{8}
}

func (x *EditPlaylistPrivateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EditPlaylistPrivateResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeletePlaylistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePlaylistRequest) Reset() {
	*x = DeletePlaylistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlaylistRequest) ProtoMessage() {}

func (x *DeletePlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlaylistRequest.ProtoReflect.Descriptor instead.
func (*DeletePlaylistRequest) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_playlist_proto_rawDescGZIP(), []int{9}
}

func (x *DeletePlaylistRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeletePlaylistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeletePlaylistResponse) Reset() {
	*x = DeletePlaylistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlaylistResponse) ProtoMessage() {}

func (x *DeletePlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlaylistResponse.ProtoReflect.Descriptor instead.
func (*DeletePlaylistResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_playlist_proto_rawDescGZIP(), []int{10}
}

func (x *DeletePlaylistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddMusicToPlaylistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MusicIds []string `protobuf:"bytes,2,rep,name=music_ids,json=musicIds,proto3" json:"music_ids,omitempty"`
}

func (x *AddMusicToPlaylistRequest) Reset() {
	*x = AddMusicToPlaylistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMusicToPlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMusicToPlaylistRequest) ProtoMessage() {}

func (x *AddMusicToPlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMusicToPlaylistRequest.ProtoReflect.Descriptor instead.
func (*AddMusicToPlaylistRequest) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_playlist_proto_rawDescGZIP(), []int{11}
}

func (x *AddMusicToPlaylistRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddMusicToPlaylistRequest) GetMusicIds() []string {
	if x != nil {
		return x.MusicIds
	}
	return nil
}

type AddMusicToPlaylistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string             `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Playlist *MusicPlaylistData `protobuf:"bytes,2,opt,name=playlist,proto3" json:"playlist,omitempty"`
	Musics   []*MusicData       `protobuf:"bytes,3,rep,name=musics,proto3" json:"musics,omitempty"`
}

func (x *AddMusicToPlaylistResponse) Reset() {
	*x = AddMusicToPlaylistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMusicToPlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMusicToPlaylistResponse) ProtoMessage() {}

func (x *AddMusicToPlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMusicToPlaylistResponse.ProtoReflect.Descriptor instead.
func (*AddMusicToPlaylistResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_playlist_proto_rawDescGZIP(), []int{12}
}

func (x *AddMusicToPlaylistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddMusicToPlaylistResponse) GetPlaylist() *MusicPlaylistData {
	if x != nil {
		return x.Playlist
	}
	return nil
}

func (x *AddMusicToPlaylistResponse) GetMusics() []*MusicData {
	if x != nil {
		return x.Musics
	}
	return nil
}

type RemoveMusicFromPlaylistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MusicIds []string `protobuf:"bytes,2,rep,name=music_ids,json=musicIds,proto3" json:"music_ids,omitempty"`
}

func (x *RemoveMusicFromPlaylistRequest) Reset() {
	*x = RemoveMusicFromPlaylistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMusicFromPlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMusicFromPlaylistRequest) ProtoMessage() {}

func (x *RemoveMusicFromPlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMusicFromPlaylistRequest.ProtoReflect.Descriptor instead.
func (*RemoveMusicFromPlaylistRequest) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_playlist_proto_rawDescGZIP(), []int{13}
}

func (x *RemoveMusicFromPlaylistRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RemoveMusicFromPlaylistRequest) GetMusicIds() []string {
	if x != nil {
		return x.MusicIds
	}
	return nil
}

type RemoveMusicFromPlaylistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string             `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Playlist *MusicPlaylistData `protobuf:"bytes,2,opt,name=playlist,proto3" json:"playlist,omitempty"`
	Musics   []*MusicData       `protobuf:"bytes,3,rep,name=musics,proto3" json:"musics,omitempty"`
}

func (x *RemoveMusicFromPlaylistResponse) Reset() {
	*x = RemoveMusicFromPlaylistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMusicFromPlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMusicFromPlaylistResponse) ProtoMessage() {}

func (x *RemoveMusicFromPlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMusicFromPlaylistResponse.ProtoReflect.Descriptor instead.
func (*RemoveMusicFromPlaylistResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_v1alpha1_music_playlist_proto_rawDescGZIP(), []int{14}
}

func (x *RemoveMusicFromPlaylistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RemoveMusicFromPlaylistResponse) GetPlaylist() *MusicPlaylistData {
	if x != nil {
		return x.Playlist
	}
	return nil
}

func (x *RemoveMusicFromPlaylistResponse) GetMusics() []*MusicData {
	if x != nil {
		return x.Musics
	}
	return nil
}

var File_proto_streaming_v1alpha1_music_playlist_proto protoreflect.FileDescriptor

var file_proto_streaming_v1alpha1_music_playlist_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x15, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22,
	0x7b, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x7b, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x49,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x75, 0x73,
	0x69, 0x63, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x22, 0x29, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xb5, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x3b, 0x0a, 0x06, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x73, 0x22, 0x7b, 0x0a, 0x13,
	0x45, 0x64, 0x69, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x14, 0x45, 0x64, 0x69,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x50, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x1a, 0x45, 0x64, 0x69, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0x4f, 0x0a, 0x1b, 0x45, 0x64, 0x69, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2c, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x02, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4d, 0x0a, 0x19, 0x41, 0x64, 0x64,
	0x4d, 0x75, 0x73, 0x69, 0x63, 0x54, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x64,
	0x4d, 0x75, 0x73, 0x69, 0x63, 0x54, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x47, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d,
	0x75, 0x73, 0x69, 0x63, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x06, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x06, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x73, 0x22, 0x52, 0x0a, 0x1e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x1f,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x46, 0x72, 0x6f, 0x6d, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x50, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x3b, 0x0a, 0x06, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x75,
	0x73, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x73, 0x32,
	0xe7, 0x0a, 0x0a, 0x14, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9f, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x5f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x73,
	0x2f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x7f, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x5f, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x73, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x98, 0x01, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26,
	0x12, 0x24, 0x2f, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31,
	0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x9e, 0x01, 0x0a, 0x0c, 0x45, 0x64, 0x69, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01,
	0x2a, 0x1a, 0x24, 0x2f, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x76,
	0x31, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xc5, 0x01, 0x0a, 0x13, 0x45, 0x64, 0x69, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12,
	0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x45, 0x64, 0x69, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x3b, 0x3a, 0x01, 0x2a, 0x32, 0x36, 0x2f, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x73, 0x2f, 0x70,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x7d, 0x12,
	0xa4, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a,
	0x2a, 0x24, 0x2f, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31,
	0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xb7, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4d, 0x75,
	0x73, 0x69, 0x63, 0x54, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x75, 0x73, 0x69,
	0x63, 0x54, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x54, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30,
	0x3a, 0x01, 0x2a, 0x22, 0x2b, 0x2f, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x73,
	0x12, 0xc6, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x75, 0x73, 0x69, 0x63,
	0x46, 0x72, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x75,
	0x73, 0x69, 0x63, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x46, 0x72, 0x6f,
	0x6d, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x3a, 0x01, 0x2a, 0x2a, 0x2b, 0x2f, 0x5f,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x75, 0x73,
	0x69, 0x63, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x73, 0x42, 0x14, 0x5a, 0x12, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_streaming_v1alpha1_music_playlist_proto_rawDescOnce sync.Once
	file_proto_streaming_v1alpha1_music_playlist_proto_rawDescData = file_proto_streaming_v1alpha1_music_playlist_proto_rawDesc
)

func file_proto_streaming_v1alpha1_music_playlist_proto_rawDescGZIP() []byte {
	file_proto_streaming_v1alpha1_music_playlist_proto_rawDescOnce.Do(func() {
		file_proto_streaming_v1alpha1_music_playlist_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_streaming_v1alpha1_music_playlist_proto_rawDescData)
	})
	return file_proto_streaming_v1alpha1_music_playlist_proto_rawDescData
}

var file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_streaming_v1alpha1_music_playlist_proto_goTypes = []interface{}{
	(*CreatePlaylistRequest)(nil),           // 0: proto.streaming.v1alpha1.CreatePlaylistRequest
	(*CreatePlaylistResponse)(nil),          // 1: proto.streaming.v1alpha1.CreatePlaylistResponse
	(*GetPlaylistsResponse)(nil),            // 2: proto.streaming.v1alpha1.GetPlaylistsResponse
	(*GetPlaylistRequest)(nil),              // 3: proto.streaming.v1alpha1.GetPlaylistRequest
	(*GetPlaylistResponse)(nil),             // 4: proto.streaming.v1alpha1.GetPlaylistResponse
	(*EditPlaylistRequest)(nil),             // 5: proto.streaming.v1alpha1.EditPlaylistRequest
	(*EditPlaylistResponse)(nil),            // 6: proto.streaming.v1alpha1.EditPlaylistResponse
	(*EditPlaylistPrivateRequest)(nil),      // 7: proto.streaming.v1alpha1.EditPlaylistPrivateRequest
	(*EditPlaylistPrivateResponse)(nil),     // 8: proto.streaming.v1alpha1.EditPlaylistPrivateResponse
	(*DeletePlaylistRequest)(nil),           // 9: proto.streaming.v1alpha1.DeletePlaylistRequest
	(*DeletePlaylistResponse)(nil),          // 10: proto.streaming.v1alpha1.DeletePlaylistResponse
	(*AddMusicToPlaylistRequest)(nil),       // 11: proto.streaming.v1alpha1.AddMusicToPlaylistRequest
	(*AddMusicToPlaylistResponse)(nil),      // 12: proto.streaming.v1alpha1.AddMusicToPlaylistResponse
	(*RemoveMusicFromPlaylistRequest)(nil),  // 13: proto.streaming.v1alpha1.RemoveMusicFromPlaylistRequest
	(*RemoveMusicFromPlaylistResponse)(nil), // 14: proto.streaming.v1alpha1.RemoveMusicFromPlaylistResponse
	(*MusicPlaylistData)(nil),               // 15: proto.streaming.v1alpha1.MusicPlaylistData
	(*MusicData)(nil),                       // 16: proto.streaming.v1alpha1.MusicData
	(*emptypb.Empty)(nil),                   // 17: google.protobuf.Empty
}
var file_proto_streaming_v1alpha1_music_playlist_proto_depIdxs = []int32{
	15, // 0: proto.streaming.v1alpha1.CreatePlaylistResponse.playlist:type_name -> proto.streaming.v1alpha1.MusicPlaylistData
	15, // 1: proto.streaming.v1alpha1.GetPlaylistsResponse.playlists:type_name -> proto.streaming.v1alpha1.MusicPlaylistData
	15, // 2: proto.streaming.v1alpha1.GetPlaylistResponse.playlist:type_name -> proto.streaming.v1alpha1.MusicPlaylistData
	16, // 3: proto.streaming.v1alpha1.GetPlaylistResponse.musics:type_name -> proto.streaming.v1alpha1.MusicData
	15, // 4: proto.streaming.v1alpha1.EditPlaylistResponse.playlist:type_name -> proto.streaming.v1alpha1.MusicPlaylistData
	15, // 5: proto.streaming.v1alpha1.AddMusicToPlaylistResponse.playlist:type_name -> proto.streaming.v1alpha1.MusicPlaylistData
	16, // 6: proto.streaming.v1alpha1.AddMusicToPlaylistResponse.musics:type_name -> proto.streaming.v1alpha1.MusicData
	15, // 7: proto.streaming.v1alpha1.RemoveMusicFromPlaylistResponse.playlist:type_name -> proto.streaming.v1alpha1.MusicPlaylistData
	16, // 8: proto.streaming.v1alpha1.RemoveMusicFromPlaylistResponse.musics:type_name -> proto.streaming.v1alpha1.MusicData
	0,  // 9: proto.streaming.v1alpha1.MusicPlaylistService.CreatePlaylist:input_type -> proto.streaming.v1alpha1.CreatePlaylistRequest
	17, // 10: proto.streaming.v1alpha1.MusicPlaylistService.GetPlaylists:input_type -> google.protobuf.Empty
	3,  // 11: proto.streaming.v1alpha1.MusicPlaylistService.GetPlaylist:input_type -> proto.streaming.v1alpha1.GetPlaylistRequest
	5,  // 12: proto.streaming.v1alpha1.MusicPlaylistService.EditPlaylist:input_type -> proto.streaming.v1alpha1.EditPlaylistRequest
	7,  // 13: proto.streaming.v1alpha1.MusicPlaylistService.EditPlaylistPrivate:input_type -> proto.streaming.v1alpha1.EditPlaylistPrivateRequest
	9,  // 14: proto.streaming.v1alpha1.MusicPlaylistService.DeletePlaylist:input_type -> proto.streaming.v1alpha1.DeletePlaylistRequest
	11, // 15: proto.streaming.v1alpha1.MusicPlaylistService.AddMusicToPlaylist:input_type -> proto.streaming.v1alpha1.AddMusicToPlaylistRequest
	13, // 16: proto.streaming.v1alpha1.MusicPlaylistService.RemoveMusicFromPlaylist:input_type -> proto.streaming.v1alpha1.RemoveMusicFromPlaylistRequest
	1,  // 17: proto.streaming.v1alpha1.MusicPlaylistService.CreatePlaylist:output_type -> proto.streaming.v1alpha1.CreatePlaylistResponse
	2,  // 18: proto.streaming.v1alpha1.MusicPlaylistService.GetPlaylists:output_type -> proto.streaming.v1alpha1.GetPlaylistsResponse
	4,  // 19: proto.streaming.v1alpha1.MusicPlaylistService.GetPlaylist:output_type -> proto.streaming.v1alpha1.GetPlaylistResponse
	6,  // 20: proto.streaming.v1alpha1.MusicPlaylistService.EditPlaylist:output_type -> proto.streaming.v1alpha1.EditPlaylistResponse
	8,  // 21: proto.streaming.v1alpha1.MusicPlaylistService.EditPlaylistPrivate:output_type -> proto.streaming.v1alpha1.EditPlaylistPrivateResponse
	10, // 22: proto.streaming.v1alpha1.MusicPlaylistService.DeletePlaylist:output_type -> proto.streaming.v1alpha1.DeletePlaylistResponse
	12, // 23: proto.streaming.v1alpha1.MusicPlaylistService.AddMusicToPlaylist:output_type -> proto.streaming.v1alpha1.AddMusicToPlaylistResponse
	14, // 24: proto.streaming.v1alpha1.MusicPlaylistService.RemoveMusicFromPlaylist:output_type -> proto.streaming.v1alpha1.RemoveMusicFromPlaylistResponse
	17, // [17:25] is the sub-list for method output_type
	9,  // [9:17] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_streaming_v1alpha1_music_playlist_proto_init() }
func file_proto_streaming_v1alpha1_music_playlist_proto_init() {
	if File_proto_streaming_v1alpha1_music_playlist_proto != nil {
		return
	}
	file_proto_streaming_v1alpha1_data_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlaylistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlaylistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlaylistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlaylistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlaylistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditPlaylistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditPlaylistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditPlaylistPrivateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditPlaylistPrivateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePlaylistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePlaylistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMusicToPlaylistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMusicToPlaylistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMusicFromPlaylistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMusicFromPlaylistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_streaming_v1alpha1_music_playlist_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_streaming_v1alpha1_music_playlist_proto_goTypes,
		DependencyIndexes: file_proto_streaming_v1alpha1_music_playlist_proto_depIdxs,
		MessageInfos:      file_proto_streaming_v1alpha1_music_playlist_proto_msgTypes,
	}.Build()
	File_proto_streaming_v1alpha1_music_playlist_proto = out.File
	file_proto_streaming_v1alpha1_music_playlist_proto_rawDesc = nil
	file_proto_streaming_v1alpha1_music_playlist_proto_goTypes = nil
	file_proto_streaming_v1alpha1_music_playlist_proto_depIdxs = nil
}
